// scripts/seedObjectsAndEstimates.js

const pool = require('../config/db');

const objects = [
  { name: '–ñ–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å ¬´–°–µ–≤–µ—Ä–Ω—ã–π¬ª', description: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∂–∏–ª—ã—Ö –∑–¥–∞–Ω–∏–π –Ω–∞ —Å–µ–≤–µ—Ä–µ –≥–æ—Ä–æ–¥–∞' },
  { name: '–¢–¶ ¬´–ì–∞–ª–µ—Ä–µ—è¬ª', description: '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞' },
  { name: '–ë–∏–∑–Ω–µ—Å-–ø–∞—Ä–∫ ¬´–û—Ä–∏–æ–Ω¬ª', description: '–û—Ñ–∏—Å–Ω—ã–µ –∑–¥–∞–Ω–∏—è –¥–ª—è IT-–∫–æ–º–ø–∞–Ω–∏–π' },
  { name: '–®–∫–æ–ª–∞ ‚Ññ25', description: '–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ –Ω–∞ 1200 —É—á–µ–Ω–∏–∫–æ–≤' },
  { name: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å ¬´–í–æ–ª–Ω–∞¬ª', description: '–ü–ª–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π –±–∞—Å—Å–µ–π–Ω –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª' },
];

const generateEstimates = (objectId) => [
  {
    object_id: objectId,
    name: `–°–º–µ—Ç–∞ A –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ ${objectId}`,
    status: 'draft',
  },
  {
    object_id: objectId,
    name: `–°–º–µ—Ç–∞ B –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ ${objectId}`,
    status: 'pending',
  },
];

const seed = async () => {
  const conn = await pool.getConnection();

  try {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü...');
    await conn.query('DELETE FROM Estimates');
    await conn.query('DELETE FROM UserObjects');
    await conn.query('DELETE FROM Objects');

    console.log('üå± –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤...');
    const objectIds = [];
    for (const obj of objects) {
      const [result] = await conn.execute(
        'INSERT INTO Objects (name, description, created_by) VALUES (?, ?, ?)',
        [obj.name, obj.description, 79] // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ user_id = 1 ‚Äî –∞–¥–º–∏–Ω –∏–ª–∏ –ø—Ä–æ—Ä–∞–±
      );
      objectIds.push(result.insertId);
    }

    console.log('üßæ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ—Ç...');
    for (const objectId of objectIds) {
      const estimates = generateEstimates(objectId);
      for (const est of estimates) {
        await conn.execute(
          'INSERT INTO Estimates (object_id, name, status, created_by) VALUES (?, ?, ?, ?)',
          [est.object_id, est.name, est.status, 79]
        );
      }
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', err);
  } finally {
    conn.release();
    process.exit();
  }
};

seed();
