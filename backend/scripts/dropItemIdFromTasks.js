require('dotenv').config();
const pool = require('../config/db');

async function dropItemIdColumn() {
  try {
    const [constraints] = await pool.query(`
      SELECT CONSTRAINT_NAME
      FROM information_schema.KEY_COLUMN_USAGE
      WHERE TABLE_NAME = 'Tasks'
        AND COLUMN_NAME = 'item_id'
        AND CONSTRAINT_SCHEMA = ?
        AND REFERENCED_TABLE_NAME IS NOT NULL
    `, [process.env.DB_NAME]);

    if (constraints.length > 0) {
      const constraintName = constraints[0].CONSTRAINT_NAME;
      console.log(`üîß –£–¥–∞–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞ ${constraintName}...`);
      await pool.execute(`ALTER TABLE Tasks DROP FOREIGN KEY \`${constraintName}\``);
      console.log(`‚úÖ –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á ${constraintName} —É–¥–∞–ª—ë–Ω.`);
    }

    const [columns] = await pool.query(`SHOW COLUMNS FROM Tasks LIKE 'item_id'`);
    if (columns.length > 0) {
      console.log(`üîß –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—è item_id...`);
      await pool.execute(`ALTER TABLE Tasks DROP COLUMN item_id`);
      console.log('‚úÖ –ü–æ–ª–µ item_id —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.');
    } else {
      console.log('‚ÑπÔ∏è –ü–æ–ª–µ item_id —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.');
    }

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
  } finally {
    pool.end();
  }
}

dropItemIdColumn();
